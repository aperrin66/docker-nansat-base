ARG BASE_IMAGE=python:3.7-slim
FROM ${BASE_IMAGE} as builder

ARG GDAL_VERSION=2.4.4

ENV BUILD_DIR=build \
    INSTALL_PREFIX=usr/local

# Setup compiling environment
RUN apt update && \
    apt install -y --no-install-recommends \
    bash-completion \
    curl \
    file \
    g++ \
    libcurl4-gnutls-dev \
    libdap-dev \
    libexpat1-dev \
    libgeos-dev \
    libhdf4-dev \
    libhdf5-dev \
    libjpeg-dev \
    libnetcdf-dev \
    libpq-dev \
    libproj-dev \
    libspatialite-dev \
    libsqlite3-dev \
    libssl-dev \
    libwebp-dev \
    libxerces-c-dev \
    libzstd-dev \
    make \
    pkg-config && \
    apt clean && \
    rm -rf /var/lib/apt/lists/* && \
    pip install --prefix "/${BUILD_DIR}/${INSTALL_PREFIX}" numpy==1.17.4

ENV PATH="/${BUILD_DIR}/${INSTALL_PREFIX}/bin:${PATH}" \
    LIBRARY_PATH="/${BUILD_DIR}/${INSTALL_PREFIX}/lib:${LIBRARY_PATH}" \
    C_INCLUDE_PATH="/${BUILD_DIR}/${INSTALL_PREFIX}/include:${C_INCLUDE_PATH}" \
    CPLUS_INCLUDE_PATH="/${BUILD_DIR}/${INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}" \
    PYTHONPATH="/${BUILD_DIR}/${INSTALL_PREFIX}/lib/python3.7/site-packages:${PYTHONPATH}" \
    PYTHONUNBUFFERED=1

# Compile GDAL
RUN mkdir -p /src/gdal && \
    curl -s -XGET https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz | tar -C /src/gdal --strip-components=1 -xz && \
    cd /src/gdal && \
    ./configure --prefix="/${INSTALL_PREFIX}" --without-libtool \
    --with-dods-root="/usr" \
    --with-geotiff=internal --with-rename-internal-libgeotiff-symbols \
    --with-hdf4 \
    --with-hdf5 \
    --with-hide-internal-symbols \
    --with-jpeg=internal \
    --with-jpeg12 \
    --with-libtiff=internal --with-rename-internal-libtiff-symbols \
    --with-netcdf \
    --with-png=internal \
    --with-proj=/usr \
    --with-python \
    --with-spatialite \
    --with-sqlite3 \
    --with-webp && \
    make -j$(nproc) && \
    make install DESTDIR="/${BUILD_DIR}" && \
    cd / && rm -rf /src/gdal

# Install Python dependencies for Nansat
# We have to decrease Cipher security, otherwise we can't connect to gcmdservices.gsfc.nasa.gov
RUN sed -i 's/CipherString = DEFAULT@SECLEVEL=2/CipherString = DEFAULT@SECLEVEL=1/g' /etc/ssl/openssl.cnf && \
    pip install --prefix "/${BUILD_DIR}/${INSTALL_PREFIX}" \
    matplotlib==3.1.2 \
    mock==3.0.5 \
    netcdf4==1.5.3 \
    nose==1.3.7 \
    pillow==6.2.1 \
    pythesint==1.4.10 \
    python-dateutil==2.8.1 \
    scipy==1.4.0 \
    urllib3==1.25.7

FROM ${BASE_IMAGE}

ENV BUILD_DIR=build \
    INSTALL_PREFIX=usr/local \
    PYTHONUNBUFFERED=1

# Copy artifacts from the builder image
COPY --from=builder "/${BUILD_DIR}/${INSTALL_PREFIX}/" "/${INSTALL_PREFIX}/"
COPY --from=builder /etc/ssl/openssl.cnf /etc/ssl/openssl.cnf

RUN apt update && \
    apt install -y --no-install-recommends \
    libcurl4=7.64.0-4+deb10u1 \
    libdap-dev=3.20.3-1 \
    libdap-bin=3.20.3-1 \
    libexpat1=2.2.6-2+deb10u1 \
    libgeos-3.7.1=3.7.1-1 \
    libgeos-c1v5=3.7.1-1 \
    libhdf4-0=4.2.13-4  \
    libjpeg62-turbo=1:1.5.2-2+b1 \
    libnetcdf13=1:4.6.2-1 \
    libpq5=11.7-0+deb10u1 \
    libproj13=5.2.0-1 \
    libspatialite7=4.3.0a-5+b2 \
    libssl1.1=1.1.1d-0+deb10u3 \
    libwebp6=0.6.1-2 \
    libxerces-c3.2=3.2.2+debian-1+b1 \
    libzstd1=1.3.8+dfsg-3 && \
    apt clean && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /src
